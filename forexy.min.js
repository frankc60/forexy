/**
 * forexy v.1.1.18
 * Â©2020 ISC
 * frankc60@gmail.com 
 * git+https://github.com/frankc60/forexy.git
 * Build time: 13-Dec-2020 12:26:31
 */
const t=require("https");class e{constructor(){this.handlers=[]}on=(t,e)=>{this.handlers.push([t,e])};emit=(t,e)=>{this.handlers.filter((e=>e[0]==t)).forEach((s=>s[1](e,t)))}}class s extends e{static _url="https://www.freeforexapi.com/api/live";static _url2="https://coffeeboat.co.uk/forexy/forexy.php";constructor(t={}){super(),this.v=t.v||1,this.mockData=t.mock||!1,this.timestamp="",this.pair="",this.rate=0,this.fulldata="",this.cache=0,this.code=0,this.author=""}static v2Split(t){let e=t.split(/(...)(...)/);return[e[1],e[2]]}static tidyPairs(t){let e=t.toUpperCase();return e=e.replace(/\//g,""),e=e.replace(/\-/g,""),e=e.replace(/\s/g,""),e}get(t){return new Promise(((e,i)=>{try{const i=s.tidyPairs(t);if(this.emit("request",i),1==this.v)e(this._retrieveData(i));else{let[t,a]=s.v2Split(i);e(this._retrieveData2(t,a))}}catch(t){i(t)}}))}_retrieveData(e){return new Promise(((i,a)=>{this.mockData?i(this.mockRetrieveData(e)):t.get(`${s._url}?pairs=${e}`,(t=>{let s="";this.code=t.statusCode,this.emit("statusCode",t.statusCode),this.emit("headers",t.headers),t.on("data",(t=>{this.emit("stream",t),s+=t})),t.on("end",(()=>{try{let t=JSON.parse(s);this.fulldata=t,this.pair=e,this.emit("fulldata",this.fulldata),this.emit("pair",this.pair),t.message?a(`${t.message} Supported pairs: ${t.supportedPairs}`):(this.timestamp=t.rates[e].timestamp,this.rate=t.rates[e].rate,this.emit("timestamp",new Date(this.timestamp)),this.emit("rate",this.rate),i(t.rates[e].rate))}catch(t){a(t)}}))})).on("error",(t=>{a(t)}))}))}mockRetrieveData(t){return new Promise(((e,s)=>{this.pair=t,this.timestamp=new Date,this.rate=1.2233,this.cache=0,this.code=200,this.author="frankc60",this.fulldata={rates:{[t]:{rate:this.rate,timestamp:this.timestamp,code:this.code,cache:this.cache,author:this.author,pair:this.pair}},code:this.code},setTimeout((()=>{this.emit("headers",{date:"Tue, 08 Dec 2020 07:58:34 GMT","content-type":"text/html; charset=UTF-8","transfer-encoding":"chunked",connection:"close","set-cookie":["__cfduid=d830149f8dcf; expires=Thu, 07-Jan-21 07:58:34 GMT; path=/; domain=.google.com; HttpOnly; SameSite=Lax"],vary:"Accept-Encoding","cf-cache-status":"DYNAMIC",nel:'{"report_to":"cf-nel","max_age":604800}'}),this.emit("fulldata",this.fulldata),this.emit("statusCode",200),this.emit("stream","stream data..."),this.emit("pair",this.pair),this.emit("timestamp",this.timestamp),this.emit("rate",this.rate),e(this.rate)}),1e3)}))}_retrieveData2(e,i){return new Promise(((a,r)=>{this.mockData?a(this.mockRetrieveData(e+i)):t.get(`${s._url2}?f=${e}&t=${i}`,(t=>{let s="";this.emit("statusCode",t.statusCode),this.emit("headers",t.headers),t.on("data",(t=>{this.emit("stream",t),s+=t})),t.on("end",(()=>{try{let t=JSON.parse(s);this.fulldata=t,this.pair=e+i,this.cache=t.cache,this.code=t.code,this.author=t.author,this.emit("fulldata",this.fulldata),this.emit("pair",this.pair),t.error?r(`${t.error}, error ${t.code} @ ${new Date(t.timestamp)}`):(this.timestamp=t.timestamp,this.rate=t.rate,this.emit("timestamp",new Date(this.timestamp)),this.emit("rate",this.rate),a(t.rate))}catch(t){r(t)}}))})).on("error",(t=>{r(t)}))}))}}module.exports=s;
